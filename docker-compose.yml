version: "3.9"

services:
  mysql:
    image: mysql:8.4
    container_name: infra-mysql
    command: ["--default-authentication-plugin=mysql_native_password"]
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10

  mysqld_exporter:
    image: prom/mysqld-exporter:v0.15.1
    container_name: infra-mysqld-exporter
    environment:
      DATA_SOURCE_NAME: "root:${MYSQL_ROOT_PASSWORD}@(mysql:3306)/"
    ports: ["9104:9104"]
    depends_on: [mysql]

  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: infra-prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml", "--storage.tsdb.retention.time=15d"]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"

  grafana:
    image: grafana/grafana:11.2.0
    container_name: infra-grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "${GRAFANA_PORT}:3000"
    depends_on: [prometheus, loki, tempo]

  loki:
    image: grafana/loki:2.9.8
    container_name: infra-loki
    command: ["-config.file=/etc/loki/config.yml"]
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml:ro
      - loki_data:/loki
    ports:
      - "${LOKI_PORT}:3100"

  promtail:
    image: grafana/promtail:2.9.8
    container_name: infra-promtail
    command: ["-config.file=/etc/promtail/config.yml"]
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on: [loki]

  tempo:
    image: grafana/tempo:2.6.1
    container_name: infra-tempo
    command: ["-config.file=/etc/tempo/config.yml"]
    volumes:
      - ./tempo/config.yml:/etc/tempo/config.yml:ro
      - tempo_data:/tmp/tempo
    ports:
      - "${TEMPO_PORT}:3200"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.104.0
    container_name: infra-otel-collector
    command: ["--config=/etc/otel-collector/config.yaml"]
    volumes:
      - ./otel-collector/config.yaml:/etc/otel-collector/config.yaml:ro
    ports:
      - "${OTEL_COLLECTOR_OTLP_GRPC_PORT}:4317"   # OTLP gRPC
      - "${OTEL_COLLECTOR_OTLP_HTTP_PORT}:4318"   # OTLP HTTP
      - "${OTEL_COLLECTOR_PROM_EXPORTER_PORT}:8889" # metrics exporter (Prometheus scrape)
    depends_on: [prometheus, loki, tempo]

volumes:
  mysql_data:
  prometheus_data:
  grafana_data:
  loki_data:
  tempo_data:
